{"ast":null,"code":"import _classCallCheck from \"/home/waedas/Desktop/AhmadPro/technoPowers/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/waedas/Desktop/AhmadPro/technoPowers/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/waedas/Desktop/AhmadPro/technoPowers/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/waedas/Desktop/AhmadPro/technoPowers/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/waedas/Desktop/AhmadPro/technoPowers/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/waedas/Desktop/AhmadPro/technoPowers/client/src/views/LandingPage/Sections/WorkSection.js\";\nimport React from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // @material-ui/icons\n// core components\n\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport styles from \"assets/jss/material-kit-react/views/landingPageSections/workStyle.js\";\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport Warning from \"@material-ui/icons/Warning\";\nvar useStyles = makeStyles(styles);\n\nvar axios = require('axios');\n\nvar internalApi = \"http://localhost:9000/\";\nexport function WorkSectionContainer() {\n  var _this = this;\n\n  var classes = useStyles();\n  var userName = localStorage.getItem(\"username\") && localStorage.getItem(\"username\") != \"null\" ? localStorage.getItem(\"username\") : \"Your Name\";\n  var userEmail = localStorage.getItem(\"email\") && localStorage.getItem(\"email\") != \"null\" ? localStorage.getItem(\"email\") : \"Your Email\";\n  var showWarningMsg = false; //   return () => {\n  //     switch (type) {\n  //       case 'info':\n  //         NotificationManager.info('Info message');\n  //         break;\n  //       case 'success':\n  //         NotificationManager.success('Success message', 'Title here');\n  //         break;\n  //       case 'warning':\n  //         NotificationManager.warning('Warning message', 'Close after 3000ms', 3000);\n  //         break;\n  //       case 'error':\n  //         NotificationManager.error('Error message', 'Click me!', 5000, () => {\n  //           alert('callback');\n  //         });\n  //         break;\n  //     }\n  //   };\n  // };\n\n  return React.createElement(\"div\", {\n    className: classes.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    cs: 12,\n    sm: 12,\n    md: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Request a course\"), React.createElement(\"h4\", {\n    className: classes.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"We would love to hear from you. Simply complete the form below or email our team at academy.sk@techdata.com\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    labelText: userName,\n    id: \"name\",\n    formControlProps: {\n      fullWidth: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    labelText: userEmail,\n    id: \"email\",\n    formControlProps: {\n      fullWidth: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(CustomInput, {\n    labelText: \"Your Message\",\n    id: \"message\",\n    formControlProps: {\n      fullWidth: true,\n      className: classes.textArea\n    },\n    inputProps: {\n      multiline: true,\n      rows: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(NotificationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(GridContainer, {\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    className: classes.textCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, showWarningMsg ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Please fill in the required fields\") : null, React.createElement(Button, {\n    color: \"primary\",\n    onClick: function onClick() {\n      return _this.props.handelSubmit();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Send\"))))))));\n}\n\nvar WorkSection =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(WorkSection, _React$Component);\n\n  function WorkSection() {\n    _classCallCheck(this, WorkSection);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WorkSection).apply(this, arguments));\n  }\n\n  _createClass(WorkSection, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(WorkSectionContainer, {\n        handelSubmit: this.handelSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"handelSubmit\",\n    value: function handelSubmit() {\n      var name = document.getElementById(\"name\").value ? document.getElementById(\"name\").value : userName;\n      var email = document.getElementById(\"email\").value ? document.getElementById(\"email\").value : userEmail;\n\n      if (!(name && email && document.getElementById(\"message\").value)) {\n        console.log(\"test-values empty error\");\n        showWarningMsg = true; // message, title, timeOut, callback, priority\n\n        NotificationManager.warning('Please fill in the required fields', '', 3000, null, true);\n      } else {\n        console.log(\"call api-apisss\");\n        axios.post(\"\".concat(internalApi, \"api/requestCourse\"), {\n          \"email\": email,\n          \"name\": name,\n          \"message\": document.getElementById(\"message\").value\n        }).then(function (response) {\n          return NotificationManager.success('Done ,Thanks', '', 3000);\n        })[\"catch\"](function (error) {\n          return NotificationManager.error('Unexpected Error ..sorry, try again', '', 1000);\n          return error;\n        });\n      }\n    }\n  }]);\n\n  return WorkSection;\n}(React.Component);\n\nexport default WorkSection;","map":{"version":3,"sources":["/home/waedas/Desktop/AhmadPro/technoPowers/client/src/views/LandingPage/Sections/WorkSection.js"],"names":["React","makeStyles","GridContainer","GridItem","CustomInput","Button","styles","NotificationContainer","NotificationManager","Warning","useStyles","axios","require","internalApi","WorkSectionContainer","classes","userName","localStorage","getItem","userEmail","showWarningMsg","section","title","description","fullWidth","className","textArea","multiline","rows","textCenter","props","handelSubmit","WorkSection","name","document","getElementById","value","email","console","log","warning","post","then","response","success","error","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// @material-ui/icons\n\n// core components\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\n\nimport styles from \"assets/jss/material-kit-react/views/landingPageSections/workStyle.js\";\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\n\n\nimport Warning from \"@material-ui/icons/Warning\";\n\nconst useStyles = makeStyles(styles);\nconst axios = require('axios');\nconst internalApi =\"http://localhost:9000/\"\n\nexport  function WorkSectionContainer() {\n  const classes = useStyles();\n  let userName = localStorage.getItem(\"username\") && localStorage.getItem(\"username\") != \"null\" ? localStorage.getItem(\"username\") :\"Your Name\"\n  let userEmail = localStorage.getItem(\"email\") && localStorage.getItem(\"email\") != \"null\" ?  localStorage.getItem(\"email\") : \"Your Email\";\n  var showWarningMsg = false ;\n  //   return () => {\n  //     switch (type) {\n  //       case 'info':\n  //         NotificationManager.info('Info message');\n  //         break;\n  //       case 'success':\n  //         NotificationManager.success('Success message', 'Title here');\n  //         break;\n  //       case 'warning':\n  //         NotificationManager.warning('Warning message', 'Close after 3000ms', 3000);\n  //         break;\n  //       case 'error':\n  //         NotificationManager.error('Error message', 'Click me!', 5000, () => {\n  //           alert('callback');\n  //         });\n  //         break;\n  //     }\n  //   };\n  // };\n  return (\n    <div className={classes.section}>\n      <GridContainer justify=\"center\">\n        <GridItem cs={12} sm={12} md={8}>\n          <h2 className={classes.title}>Request a course</h2>\n          <h4 className={classes.description}>\n            We would love to hear from you. Simply complete the form below or email our team at academy.sk@techdata.com\n          </h4>\n          <form>\n            <GridContainer>\n              <GridItem xs={12} sm={12} md={6}>\n                <CustomInput\n                  labelText={userName}\n                  id=\"name\"\n                  formControlProps={{\n                    fullWidth: true\n                  }}\n                />\n              </GridItem>\n              <GridItem xs={12} sm={12} md={6}>\n                <CustomInput\n                  labelText={userEmail}\n                  id=\"email\"\n                  formControlProps={{\n                    fullWidth: true\n                  }}\n                />\n              </GridItem>\n              <CustomInput\n                labelText=\"Your Message\"\n                id=\"message\"\n                formControlProps={{\n                  fullWidth: true,\n                  className: classes.textArea\n                }}\n                inputProps={{\n                  multiline: true,\n                  rows: 5\n                }}\n              />\n              <NotificationContainer />\n              <GridContainer justify=\"center\">\n                <GridItem xs={12} sm={12} md={4} className={classes.textCenter}>\n                  {showWarningMsg ? (<p>Please fill in the required fields</p>) : (null)}\n                  <Button color=\"primary\" onClick ={() => this.props.handelSubmit()}>Send</Button>\n                </GridItem>\n              </GridContainer>\n            </GridContainer>\n          </form>\n        </GridItem>\n      </GridContainer>\n    </div>\n  );\n}\nclass WorkSection extends  React.Component {\n  render() {\n    return (\n      <WorkSectionContainer handelSubmit={this.handelSubmit}/>\n    );\n  }\n  handelSubmit(){\n    var name = document.getElementById(\"name\").value ? document.getElementById(\"name\").value : userName;\n    var email = document.getElementById(\"email\").value ? document.getElementById(\"email\").value : userEmail;\n\n    if(!(name && email &&  document.getElementById(\"message\").value)){\n      console.log(\"test-values empty error\")\n      showWarningMsg = true;\n      // message, title, timeOut, callback, priority\n      NotificationManager.warning('Please fill in the required fields', '', 3000,null,true);\n    }else{\n      console.log(\"call api-apisss\")\n      axios.post(`${internalApi}api/requestCourse`, {\n        \"email\": email,\n        \"name\": name,\n        \"message\": document.getElementById(\"message\").value\n      })\n      .then(function (response) {\n        return NotificationManager.success('Done ,Thanks', '', 3000);\n      })\n      .catch(function (error) {\n        return NotificationManager.error('Unexpected Error ..sorry, try again', '', 1000);\n        return error;\n      });\n    }\n  }\n}\n\nexport default WorkSection;"]},"metadata":{},"sourceType":"module"}