{"ast":null,"code":"import _classCallCheck from \"/home/waedas/Desktop/AhmadPro/technoPowers/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/waedas/Desktop/AhmadPro/technoPowers/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/waedas/Desktop/AhmadPro/technoPowers/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/waedas/Desktop/AhmadPro/technoPowers/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/waedas/Desktop/AhmadPro/technoPowers/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/waedas/Desktop/AhmadPro/technoPowers/client/src/views/LandingPage/Sections/WorkSection.js\";\nimport React, { Component } from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // @material-ui/icons\n// core components\n\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport styles from \"assets/jss/material-kit-react/views/landingPageSections/workStyle.js\";\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport { Alert } from 'reactstrap';\nimport Warning from \"@material-ui/icons/Warning\";\n\nvar axios = require('axios');\n\nvar internalApi = \"http://localhost:9000/\"; //   return () => {\n//     switch (type) {\n//       case 'info':\n//         NotificationManager.info('Info message');\n//         break;\n//       case 'success':\n//         NotificationManager.success('Success message', 'Title here');\n//         break;\n//       case 'warning':\n//         NotificationManager.warning('Warning message', 'Close after 3000ms', 3000);\n//         break;\n//       case 'error':\n//         NotificationManager.error('Error message', 'Click me!', 5000, () => {\n//           alert('callback');\n//         });\n//         break;\n//     }\n//   };\n// };\n\nvar WorkSection =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WorkSection, _Component);\n\n  function WorkSection() {\n    var _this;\n\n    _classCallCheck(this, WorkSection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WorkSection).call(this));\n    _this.state = {};\n    var useStyles = makeStyles(styles);\n    var classes = useStyles();\n    var userName = localStorage.getItem(\"username\") && localStorage.getItem(\"username\") != \"null\" ? localStorage.getItem(\"username\") : \"Your Name\";\n    var userEmail = localStorage.getItem(\"email\") && localStorage.getItem(\"email\") != \"null\" ? localStorage.getItem(\"email\") : \"Your Email\";\n    return _this;\n  }\n\n  _createClass(WorkSection, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      NotificationManager.info('WorkSection');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: classes.section,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        cs: 12,\n        sm: 12,\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: classes.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Request a course\"), React.createElement(\"h4\", {\n        className: classes.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"We would love to hear from you. Simply complete the form below or email our team at academy.sk@techdata.com\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        labelText: userName,\n        id: \"name\",\n        formControlProps: {\n          fullWidth: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        labelText: userEmail,\n        id: \"email\",\n        formControlProps: {\n          fullWidth: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(CustomInput, {\n        labelText: \"Your Message\",\n        id: \"message\",\n        formControlProps: {\n          fullWidth: true,\n          className: classes.textArea\n        },\n        inputProps: {\n          multiline: true,\n          rows: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(NotificationContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(GridContainer, {\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"customAlert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        \"class\": \"message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        className: classes.textCenter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          return handelSubmit();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Send\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return WorkSection;\n}(Component);\n\nexport { WorkSection as default };\n\nfunction handelSubmit() {\n  var name = document.getElementById(\"name\").value ? document.getElementById(\"name\").value : userName;\n  var email = document.getElementById(\"email\").value ? document.getElementById(\"email\").value : userEmail;\n  alert(\"helooooooooooo\");\n\n  if (!(name && email && document.getElementById(\"message\").value)) {\n    console.log(\"test-values empty error\"); // message, title, timeOut, callback, priority\n    // NotificationManager.warning('Please fill in the required fields', '', 3000,null,true);\n  } else {\n    console.log(\"call api-apisss\");\n    axios.post(\"\".concat(internalApi, \"api/requestCourse\"), {\n      \"email\": email,\n      \"name\": name,\n      \"message\": document.getElementById(\"message\").value\n    }).then(function (response) {\n      return NotificationManager.success('Done ,Thanks', '', 3000);\n    })[\"catch\"](function (error) {\n      return NotificationManager.error('Unexpected Error ..sorry, try again', '', 1000);\n      return error;\n    });\n  }\n}","map":{"version":3,"sources":["/home/waedas/Desktop/AhmadPro/technoPowers/client/src/views/LandingPage/Sections/WorkSection.js"],"names":["React","Component","makeStyles","GridContainer","GridItem","CustomInput","Button","styles","NotificationContainer","NotificationManager","Alert","Warning","axios","require","internalApi","WorkSection","state","useStyles","classes","userName","localStorage","getItem","userEmail","info","section","title","description","fullWidth","className","textArea","multiline","rows","textCenter","handelSubmit","name","document","getElementById","value","email","alert","console","log","post","then","response","success","error"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// @material-ui/icons\n\n// core components\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\n\nimport styles from \"assets/jss/material-kit-react/views/landingPageSections/workStyle.js\";\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport { Alert } from 'reactstrap';\nimport Warning from \"@material-ui/icons/Warning\";\nconst axios = require('axios');\nconst internalApi =\"http://localhost:9000/\"\n\n//   return () => {\n  //     switch (type) {\n  //       case 'info':\n  //         NotificationManager.info('Info message');\n  //         break;\n  //       case 'success':\n  //         NotificationManager.success('Success message', 'Title here');\n  //         break;\n  //       case 'warning':\n  //         NotificationManager.warning('Warning message', 'Close after 3000ms', 3000);\n  //         break;\n  //       case 'error':\n  //         NotificationManager.error('Error message', 'Click me!', 5000, () => {\n  //           alert('callback');\n  //         });\n  //         break;\n  //     }\n  //   };\n  // };\n\nexport default class WorkSection extends Component{\n  \n  constructor() {\n    super();\n    this.state = {}\n    const useStyles = makeStyles(styles);\n    const classes = useStyles();\n    let userName = localStorage.getItem(\"username\") && localStorage.getItem(\"username\") != \"null\" ? localStorage.getItem(\"username\") :\"Your Name\"\n    let userEmail = localStorage.getItem(\"email\") && localStorage.getItem(\"email\") != \"null\" ?  localStorage.getItem(\"email\") : \"Your Email\";\n }\n componentDidMount(){\n  NotificationManager.info('WorkSection')\n}\n render() {\n  return (\n    <div className={classes.section}>\n      <GridContainer justify=\"center\">\n        <GridItem cs={12} sm={12} md={8}>\n          <h2 className={classes.title}>Request a course</h2>\n          <h4 className={classes.description}>\n            We would love to hear from you. Simply complete the form below or email our team at academy.sk@techdata.com\n          </h4>\n          <form>\n            <GridContainer>\n              <GridItem xs={12} sm={12} md={6}>\n                <CustomInput\n                  labelText={userName}\n                  id=\"name\"\n                  formControlProps={{\n                    fullWidth: true\n                  }}\n                />\n              </GridItem>\n              <GridItem xs={12} sm={12} md={6}>\n                <CustomInput\n                  labelText={userEmail}\n                  id=\"email\"\n                  formControlProps={{\n                    fullWidth: true\n                  }}\n                />\n              </GridItem>\n              <CustomInput\n                labelText=\"Your Message\"\n                id=\"message\"\n                formControlProps={{\n                  fullWidth: true,\n                  className: classes.textArea\n                }}\n                inputProps={{\n                  multiline: true,\n                  rows: 5\n                }}\n              />\n              <NotificationContainer />\n              <GridContainer justify=\"center\">    \n              <div className='customAlert'>\n                      <p class='message'></p>\n                      {/* <input type='button' class='confirmButton' value='Ok'></input> */}\n                 </div>\n                <GridItem xs={12} sm={12} md={4} className={classes.textCenter}>\n                  <Button color=\"primary\" onClick ={() => handelSubmit()}>Send</Button>\n                </GridItem>\n              </GridContainer>\n              <br />\n            </GridContainer>\n          </form>\n        </GridItem>\n      </GridContainer>\n    </div>\n  );\n }\n \n}\nfunction handelSubmit(){\n  var name = document.getElementById(\"name\").value ? document.getElementById(\"name\").value : userName;\n  var email = document.getElementById(\"email\").value ? document.getElementById(\"email\").value : userEmail;\n  alert(\"helooooooooooo\")\n\n  if(!(name && email &&  document.getElementById(\"message\").value)){\n    console.log(\"test-values empty error\")\n    // message, title, timeOut, callback, priority\n    // NotificationManager.warning('Please fill in the required fields', '', 3000,null,true);\n  }else{\n    console.log(\"call api-apisss\")\n    axios.post(`${internalApi}api/requestCourse`, {\n      \"email\": email,\n      \"name\": name,\n      \"message\": document.getElementById(\"message\").value\n    })\n    .then(function (response) {\n      return NotificationManager.success('Done ,Thanks', '', 3000);\n    })\n    .catch(function (error) {\n      return NotificationManager.error('Unexpected Error ..sorry, try again', '', 1000);\n      return error;\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}