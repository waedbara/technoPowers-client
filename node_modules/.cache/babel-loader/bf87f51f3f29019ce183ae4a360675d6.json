{"ast":null,"code":"import _slicedToArray from \"/home/waedas/Desktop/AhmadPro/technoPowers/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/waedas/Desktop/AhmadPro/technoPowers/client/src/components/Snackbar/SnackbarContent.js\";\nimport React from \"react\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snack from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport Close from \"@material-ui/icons/Close\"; // core components\n\nimport styles from \"assets/jss/material-kit-react/components/snackbarContentStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function SnackbarContent(props) {\n  var message = props.message,\n      color = props.color,\n      close = props.close,\n      icon = props.icon;\n  console.log(props, \"props??????\");\n  var classes = useStyles();\n  var action = [];\n\n  var closeAlert = function closeAlert() {\n    setAlert(null);\n  };\n\n  if (close !== undefined) {\n    action = [React.createElement(IconButton, {\n      className: classes.iconButton,\n      key: \"close\",\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      onClick: closeAlert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Close, {\n      className: classes.close,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }))];\n  }\n\n  var snackIcon = null;\n\n  switch (typeof icon) {\n    case \"object\":\n      snackIcon = React.createElement(props.icon, {\n        className: classes.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n      break;\n\n    case \"string\":\n      snackIcon = React.createElement(Icon, {\n        className: classes.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, props.icon);\n      break;\n\n    default:\n      snackIcon = null;\n      break;\n  }\n\n  var _React$useState = React.useState(React.createElement(Snack, {\n    message: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, snackIcon, message, close !== undefined ? action : null),\n    classes: {\n      root: classes.root + \" \" + classes[color],\n      message: classes.message + \" \" + classes.container\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      alert = _React$useState2[0],\n      setAlert = _React$useState2[1];\n\n  return alert;\n}\nSnackbarContent.propTypes = {\n  message: PropTypes.node.isRequired,\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\n  close: PropTypes.bool,\n  icon: PropTypes.oneOfType([PropTypes.object, PropTypes.string])\n};","map":{"version":3,"sources":["/home/waedas/Desktop/AhmadPro/technoPowers/client/src/components/Snackbar/SnackbarContent.js"],"names":["React","PropTypes","makeStyles","Snack","IconButton","Icon","Close","styles","useStyles","SnackbarContent","props","message","color","close","icon","console","log","classes","action","closeAlert","setAlert","undefined","iconButton","snackIcon","useState","root","container","alert","propTypes","node","isRequired","oneOf","bool","oneOfType","object","string"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snack from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\nimport Close from \"@material-ui/icons/Close\";\n// core components\n\nimport styles from \"assets/jss/material-kit-react/components/snackbarContentStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function SnackbarContent(props) {\n  const { message, color, close, icon } = props;\n  console.log(props,\"props??????\")\n  const classes = useStyles();\n  var action = [];\n  const closeAlert = () => {\n    setAlert(null);\n  };\n  if (close !== undefined) {\n    action = [\n      <IconButton\n        className={classes.iconButton}\n        key=\"close\"\n        aria-label=\"Close\"\n        color=\"inherit\"\n        onClick={closeAlert}\n      >\n        <Close className={classes.close} />\n      </IconButton>\n    ];\n  }\n  let snackIcon = null;\n  switch (typeof icon) {\n    case \"object\":\n      snackIcon = <props.icon className={classes.icon} />;\n      break;\n    case \"string\":\n      snackIcon = <Icon className={classes.icon}>{props.icon}</Icon>;\n      break;\n    default:\n      snackIcon = null;\n      break;\n  }\n  const [alert, setAlert] = React.useState(\n    <Snack\n      message={\n        <div>\n          {snackIcon}\n          {message}\n          {close !== undefined ? action : null}\n        </div>\n      }\n      classes={{\n        root: classes.root + \" \" + classes[color],\n        message: classes.message + \" \" + classes.container\n      }}\n    />\n  );\n  return alert;\n}\n\nSnackbarContent.propTypes = {\n  message: PropTypes.node.isRequired,\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\n  close: PropTypes.bool,\n  icon: PropTypes.oneOfType([PropTypes.object, PropTypes.string])\n};\n"]},"metadata":{},"sourceType":"module"}