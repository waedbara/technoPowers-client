{"ast":null,"code":"var _jsxFileName = \"/home/waedas/Desktop/AhmadPro/technoPowers/client/src/views/LandingPage/Sections/WorkSection.js\";\nimport React from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // @material-ui/icons\n// core components\n\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport styles from \"assets/jss/material-kit-react/views/landingPageSections/workStyle.js\";\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport Warning from \"@material-ui/icons/Warning\";\nvar useStyles = makeStyles(styles);\n\nvar axios = require('axios');\n\nvar internalApi = \"http://localhost:9000/\";\nexport default function WorkSection() {\n  var classes = useStyles();\n  var username = localStorage.getItem(\"username\") && localStorage.getItem(\"username\") != \"null\" ? localStorage.getItem(\"username\") : \"Your Name\";\n  var useremail = localStorage.getItem(\"email\") && localStorage.getItem(\"email\") != \"null\" ? localStorage.getItem(\"email\") : \"Your Email\";\n\n  function createNotification(type) {\n    return function (type) {\n      switch (type) {\n        case 'info':\n          NotificationManager.info('Info message');\n          break;\n\n        case 'success':\n          NotificationManager.success('Success message', 'Title here');\n          break;\n\n        case 'warning':\n          NotificationManager.warning('Warning message', 'Close after 3000ms', 3000);\n          break;\n\n        case 'error':\n          NotificationManager.error('Error message', 'Click me!', 5000, function () {\n            alert('callback');\n          });\n          break;\n      }\n    };\n  }\n\n  ;\n\n  function handelSubmit() {\n    if (!(document.getElementById(\"name\").value && document.getElementById(\"email\").value && document.getElementById(\"message\").value)) {\n      console.log(\"test\"); //  NotificationManager.warning('Please fill in the required fields', 'غغغ', 3000);\n\n      createNotification('warning');\n    } else {\n      axios.post(\"\".concat(internalApi, \"api/requestCourse\"), {\n        \"email\": document.getElementById(\"email\").value,\n        \"name\": document.getElementById(\"name\").value,\n        \"message\": document.getElementById(\"message\").value\n      }).then(function (response) {\n        console.log(response, \"response\");\n        return NotificationManager.success('Done ,Thanks', '', 3000);\n      })[\"catch\"](function (error) {\n        NotificationManager.error('Unexpected Error ..sorry, try again', '', 5000, function () {\n          alert('callback');\n        });\n      });\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    cs: 12,\n    sm: 12,\n    md: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Request a course\"), React.createElement(\"h4\", {\n    className: classes.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"We would love to hear from you. Simply complete the form below or email our team at academy.sk@techdata.com\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    labelText: username,\n    id: \"name\",\n    formControlProps: {\n      fullWidth: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    labelText: useremail,\n    id: \"email\",\n    formControlProps: {\n      fullWidth: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), React.createElement(CustomInput, {\n    labelText: \"Your Message\",\n    id: \"message\",\n    formControlProps: {\n      fullWidth: true,\n      className: classes.textArea\n    },\n    inputProps: {\n      multiline: true,\n      rows: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(GridContainer, {\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(NotificationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    className: classes.textCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: function onClick() {\n      return handelSubmit();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Send\"))))))));\n}","map":{"version":3,"sources":["/home/waedas/Desktop/AhmadPro/technoPowers/client/src/views/LandingPage/Sections/WorkSection.js"],"names":["React","makeStyles","GridContainer","GridItem","CustomInput","Button","styles","NotificationContainer","NotificationManager","Warning","useStyles","axios","require","internalApi","WorkSection","classes","username","localStorage","getItem","useremail","createNotification","type","info","success","warning","error","alert","handelSubmit","document","getElementById","value","console","log","post","then","response","section","title","description","fullWidth","className","textArea","multiline","rows","textCenter"],"mappings":"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","sourcesContent":["import React from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// @material-ui/icons\n\n// core components\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\n\nimport styles from \"assets/jss/material-kit-react/views/landingPageSections/workStyle.js\";\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\n\n\nimport Warning from \"@material-ui/icons/Warning\";\n\nconst useStyles = makeStyles(styles);\nconst axios = require('axios');\nconst internalApi =\"http://localhost:9000/\"\n\nexport default function WorkSection() {\n  const classes = useStyles();\n  let username = localStorage.getItem(\"username\") && localStorage.getItem(\"username\") != \"null\" ? localStorage.getItem(\"username\") :\"Your Name\"\n  let useremail = localStorage.getItem(\"email\") && localStorage.getItem(\"email\") != \"null\" ? localStorage.getItem(\"email\") : \"Your Email\";\n  function createNotification(type){\n    return (type) => {\n      switch (type) {\n        case 'info':\n          NotificationManager.info('Info message');\n          break;\n        case 'success':\n          NotificationManager.success('Success message', 'Title here');\n          break;\n        case 'warning':\n          NotificationManager.warning('Warning message', 'Close after 3000ms', 3000);\n          break;\n        case 'error':\n          NotificationManager.error('Error message', 'Click me!', 5000, () => {\n            alert('callback');\n          });\n          break;\n      }\n    };\n  };\n\n  function handelSubmit(){\n    if(!(document.getElementById(\"name\").value &&  document.getElementById(\"email\").value &&  document.getElementById(\"message\").value)){\n      console.log(\"test\")\n      //  NotificationManager.warning('Please fill in the required fields', 'غغغ', 3000);\n      createNotification('warning')\n    }else{\n      axios.post(`${internalApi}api/requestCourse`, {\n        \"email\": document.getElementById(\"email\").value,\n        \"name\": document.getElementById(\"name\").value,\n        \"message\": document.getElementById(\"message\").value\n      })\n      .then(function (response) {\n        console.log(response,\"response\")\n        return NotificationManager.success('Done ,Thanks', '', 3000);\n      })\n      .catch(function (error) {\n        NotificationManager.error('Unexpected Error ..sorry, try again', '', 5000, () => {\n          alert('callback');\n        });\n      });\n    }\n  }\n\n  return (\n    <div className={classes.section}>\n      <GridContainer justify=\"center\">\n        <GridItem cs={12} sm={12} md={8}>\n          <h2 className={classes.title}>Request a course</h2>\n          <h4 className={classes.description}>\n          We would love to hear from you. Simply complete the form below or email our team at academy.sk@techdata.com\n          </h4>\n\n          <form>\n            <GridContainer>\n              <GridItem xs={12} sm={12} md={6}>\n                <CustomInput\n                  labelText={username}\n                  id=\"name\"\n                  formControlProps={{\n                    fullWidth: true\n                  }}\n                />\n              </GridItem>\n              <GridItem xs={12} sm={12} md={6}>\n                <CustomInput\n                  labelText={useremail}\n                  id=\"email\"\n                  formControlProps={{\n                    fullWidth: true\n                  }}\n                />\n              </GridItem>\n              <CustomInput\n                labelText=\"Your Message\"\n                id=\"message\"\n                formControlProps={{\n                  fullWidth: true,\n                  className: classes.textArea\n                }}\n                inputProps={{\n                  multiline: true,\n                  rows: 5\n                }}\n              />\n              <GridContainer justify=\"center\">\n              <NotificationContainer/>\n\n                <GridItem xs={12} sm={12} md={4} className={classes.textCenter}>\n                  <Button color=\"primary\" onClick ={() => handelSubmit()}>Send</Button>\n                </GridItem>\n              </GridContainer>\n            </GridContainer>\n          </form>\n        </GridItem>\n      </GridContainer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}